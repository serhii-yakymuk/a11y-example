{"version":3,"sources":["assets/img/logo.svg","assets/img/social-twitter.svg","assets/img/social-linkedin.svg","assets/img/social-facebook.svg","routes/Home/Home.js","routes/Guide/Guide.js","routes/Links/Links.js","routes/About/About.js","components/MainNavigation/MainNavigation.js","components/SocialNavigation/SocialNavigation.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","aria-labelledby","id","Guide","Links","About","MainNavigation","className","to","src","logo","alt","SocialNavigation","aria-label","target","rel","href","twitterLogo","facebookLogo","linkedinLogo","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kHAAAA,EAAOC,QAAU,IAA0B,kC,kBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,6C,iRCkB5BC,G,MAdF,WACX,OACE,oCACE,sDACA,0BAAMC,kBAAgB,yBACpB,wBAAIC,GAAG,yBAAP,oBAEF,0BAAMD,kBAAgB,yBACpB,wBAAIC,GAAG,yBAAP,yBCAOC,G,MARD,WACZ,OACE,oCACE,kDCKSC,G,MARD,WACZ,OACE,oCACE,+CCKSC,G,MARD,WACZ,OACE,oCACE,+C,iBC6BSC,G,MA5BQ,WACrB,OACE,yBAAKC,UAAU,kBAAkBL,GAAG,mBAClC,4BACE,4BACE,kBAAC,IAAD,CAAMK,UAAU,6BAA6BC,GAAG,KAC9C,yBACEC,IAAKC,IACLC,IAAI,aACJJ,UAAU,gCAJd,kBASF,4BACE,kBAAC,IAAD,CAAMC,GAAG,UAAT,UAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,UAAT,iBAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,UAAT,c,mDCiCKI,G,MAtDU,WACvB,OACE,yBACEC,aAAW,eACXN,UAAU,qBAEV,4BACE,4BACE,uBACEO,OAAO,SACPC,IAAI,sBACJC,KAAK,0CAEL,yBACEP,IAAKQ,IACLN,IAAI,eACJJ,UAAU,4BARd,YAaF,4BACE,uBACEO,OAAO,SACPC,IAAI,sBACJC,KAAK,2DAEL,yBACEP,IAAKS,IACLP,IAAI,gBACJJ,UAAU,4BARd,aAaF,4BACE,uBACEO,OAAO,SACPC,IAAI,sBACJC,KAAK,yDAEL,yBACEP,IAAKU,IACLR,IAAI,gBACJJ,UAAU,4BARd,iBCIKa,G,MAnCH,WACV,OACE,kBAAC,IAAD,KACE,4BAAQb,UAAU,cACd,kBAAC,EAAD,OAEJ,0BAAMA,UAAU,cAAcL,GAAG,WAC/B,6BAASK,UAAU,uBACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,UAKR,4BAAQf,UAAU,cAChB,uDACwB,6BADxB,uBAIA,kBAAC,EAAD,UC9BYgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCHNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDgHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.535bc6c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/social-twitter.d2e66c16.svg\";","module.exports = __webpack_public_path__ + \"static/media/social-linkedin.8e1d9053.svg\";","module.exports = __webpack_public_path__ + \"static/media/social-facebook.6c958daa.svg\";","import React from 'react';\r\n\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <h1>Form Controls Examples</h1>\r\n      <form aria-labelledby=\"html-form-description\">\r\n        <h2 id=\"html-form-description\">HTML 5 Controls</h2>\r\n      </form>\r\n      <form aria-labelledby=\"aria-form-description\">\r\n        <h2 id=\"aria-form-description\">WAI-ARIA Controls</h2>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nimport './Guide.css';\r\n\r\nconst Guide = () => {\r\n  return (\r\n    <>\r\n      <h1>Developer Guide</h1>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Guide;\r\n","import React from 'react';\r\n\r\nimport './Links.css';\r\n\r\nconst Links = () => {\r\n  return (\r\n    <>\r\n      <h1>Useful Links</h1>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Links;\r\n","import React from 'react';\r\n\r\nimport './About.css';\r\n\r\nconst About = () => {\r\n  return (\r\n    <>\r\n      <h1>About Author</h1>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport logo from 'assets/img/logo.svg';\r\n\r\nimport './MainNavigation.css';\r\n\r\nconst MainNavigation = () => {\r\n  return (\r\n    <nav className=\"main-navigation\" id=\"main-navigation\">\r\n      <ul>\r\n        <li>\r\n          <Link className=\"main-navigation__logo-link\" to=\"/\">\r\n            <img\r\n              src={logo}\r\n              alt=\"React Logo\"\r\n              className=\"main-navigation__logo-image\"\r\n            />\r\n            A11y Examples\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/guide\">Guide</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/links\">Useful Links</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/about\">About</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default MainNavigation;\r\n","import React from 'react';\r\n\r\nimport twitterLogo from 'assets/img/social-twitter.svg';\r\nimport linkedinLogo from 'assets/img/social-linkedin.svg';\r\nimport facebookLogo from 'assets/img/social-facebook.svg';\r\n\r\nimport './SocialNavigation.css';\r\n\r\nconst SocialNavigation = () => {\r\n  return (\r\n    <nav\r\n      aria-label=\"Social Media\"\r\n      className=\"social-navigation\"\r\n    >\r\n      <ul>\r\n        <li>\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://www.twitter.com/serhii_yakymuk\"\r\n          >\r\n            <img\r\n              src={twitterLogo}\r\n              alt=\"Twitter Logo\"\r\n              className=\"social-navigation__logo\"\r\n            />\r\n            Twitter\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://www.facebook.com/profile.php?id=100013280199009\"\r\n          >\r\n            <img\r\n              src={facebookLogo}\r\n              alt=\"Facebook Logo\"\r\n              className=\"social-navigation__logo\"\r\n            />\r\n            Facebook\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://www.linkedin.com/in/serhii-yakymuk-229339136/\"\r\n          >\r\n            <img\r\n              src={linkedinLogo}\r\n              alt=\"Linkedin Logo\"\r\n              className=\"social-navigation__logo\"\r\n            />\r\n            Linkedin\r\n          </a>\r\n        </li>\r\n      </ul>\r\n  </nav>\r\n  );\r\n}\r\n\r\nexport default SocialNavigation;\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Home from 'routes/Home';\r\nimport Guide from 'routes/Guide';\r\nimport Links from 'routes/Links';\r\nimport About from 'routes/About';\r\n\r\nimport MainNavigation from 'components/MainNavigation';\r\nimport SocialNavigation from 'components/SocialNavigation';\r\n\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <header className=\"app-header\">\r\n          <MainNavigation />\r\n      </header>\r\n      <main className=\"app-content\" id=\"content\">\r\n        <article className=\"app-content-article\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/guide\">\r\n              <Guide />\r\n            </Route>\r\n            <Route path=\"/links\">\r\n              <Links />\r\n            </Route>\r\n            <Route path=\"/about\">\r\n              <About />\r\n            </Route>\r\n          </Switch>\r\n        </article>\r\n      </main>\r\n      <footer className=\"app-footer\">\r\n        <p>\r\n          Â© 2020 Serhii Yakymuk <br />\r\n          All Rights Reserved\r\n        </p>\r\n        <SocialNavigation />\r\n      </footer>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from 'components/App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport './index.css';\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  const axe = require('react-axe');\r\n\r\n  axe(React, ReactDOM, 1000);\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}